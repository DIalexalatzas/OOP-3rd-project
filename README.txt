Ονοματεπώνυμο: ΑΛΕΞΑΝΔΡΟΣ ΑΛΑΤΖΑΣ
Α.Μ.: sdi1900005

Εντολή μεταγλώττισης: javac askisi4/*.java
Εντολή εκτέλεσης: java askisi4.Main (Cclass) (Lj) (Ls) (Lt) (N)

Για την εκτέλεση δίνονται οι παράμετροι από τη γραμμή εντολής σύμφωνα με την εκφώνηση.
Σημειώνεται η Cclass να μην είναι μεγαλύτερη από 32, διότι οι άνθρωποι της άσκησης παίρνουν
τα ονόματά τους από ένα αρχείο 600 μοναδικών ονομάτων. Επίσης με βάση την εκφώνηση έγινε η
υπόθεση πως οι σταθερές κατά τις οποίες μεταβάλλεται η κούραση είναι θετικοί ακέραιοι.

Το παραδοτέο αποτελείται από ένα αρχείο names.txt το οποίο αποτελείται από ενδεικτικά ονόματα
που βρήκα στο διαδίκτυο, το README.txt και 15 αρχεία java, το καθένα από τα οποία αντιστοιχεί
σε μία κλάση της οποίας η λειτουργία θα εξηγηθεί παρακάτω. Η άσκηση είναι δομημένη σε ένα
package με όνομα askisi4 το οποίο αποτελείται από 2 subpackages people, spaces καθένα από τα
οποία διαθέτουν τις αντίστοιχες κλάσεις για ανθρώπους και χώρους. Τέλος, στο askisi4 package
βρίσκεται και η κλάση Main που υλοποιεί την ζητούμενη main της άσκησης.

Ειδικότερα:

Για το people package:

Το people package αρχικά διαθέτει μια αφηρημένη υπερκλάση Person η οποία συγκεντρώνει τα 
κοινά χαρακτηριστικά των ανθρώπων του περιβάλλοντος. Σύμφωνα με την εκφώνηση όλοι οι άνθρωποι
διαθέτουν όνομα, στοιχεία τάξης, μεταβλητή που δείχνει αν βρίσκονται σε τάξη καθώς και μετρητή
κούρασης. Τα παραπάνω ορίζονται protected ώστε να χρησιμοποιηθούν άμεσα από υποκλάσεις που
κληρονομούν από αυτή. Επιπλέον ορίζονται accessors, μία συνάρτηση αλλαγής της inClass καθώς και 
συνάρτηση εκτύπωσης.

Ένα είδος Person είναι ο δάσκαλος, ο οποίος διαθέτει όλα τα στοιχεία του Person, μια μεταβλητή
static int που αντιπροσωπεύει τη σταθερά κούρασης η οποία ορίζεται static ώστε στη main να ανατεθεί
μία φορά και για όλους τους δασκάλους, μία υλοποίηση για τη συνάρτηση εκτύπωσης σύμφωνα με τα ζητούμενα
της εκφώνησης και τέλος τη συνάρτηση teach που υπολογίζει τη τελική του κούραση. Φυσικά και τον constructor
του ο οποίος καλεί τον αντίστοιχο του Person.

Ένα ακόμη είδος Person είναι και ο μαθητής, επίσης αφηρημένη κλάση αφού εν τέλει οι μαθητές διαχωρίζονται
σε Junior/Senior. Διαθέτει έναν constructor που καλεί τον αντίστοιχο του Person, την υλοποίηση της print
αφού είναι η ίδια για όλους τους μαθητές και τέλος την δήλωση της attend.

Οι Junior/Senior κληρονομούν από τη κλάση Student και διαθέτουν αντίστοιχα static int Lj/Ls για τις 
σταθερές κούρασης για τους ίδιους λόγους με τους δασκάλους, constructors σύμφωνα με τα ζητούμενα και
την αντίστοιχη υλοποίηση της attend σύμφωνα με το είδος του μαθητή κάθε φορά.

Για το spaces package:

Αρχικά σε όλες τις κλάσεις γίνεται import το people package.

Η κλάση Space είναι αφηρημένη και αναπαριστά την έννοια του χώρου στο περιβάλλον της άσκησης. Κοινό
χαρακτηριστικό όλων των χώρων η συνάρτηση εισόδου enter.

Οι χώροι κατανέμονται σε δύο κατηγορίες: Operating/Non-operating με τη λογική ότι στη πρώτη ανήκουν
οι χώροι που "λειτουργούν" ενώ στη δεύτερη αυτοί που απλά μεταβιβάζουν μαθητές.

Οι Operating χώροι διαθέτουν έναν ακέραιο που αναπαριστά τη χωρητικότητα των αιθουσών, ένα vector για τον
δάσκαλο και τις συναρτήσεις place (η οποία προσθέτει τον δάσκαλο στο vector), enter, operate, print 
σύμφωνα με την εκφώνηση.

Οι Non-operating χώροι διαθέτουν ένα vector από μαθητές και συναρτήσεις enter exit, οι οποίες προσθέτουν
ή αφαιρούν αντίστοιχα τον μαθητή από το vector.

Η κύρια διαφορά μεταξύ των Non-operating ως προς την υλοποίηση, εκτός του ότι αναπαριστούν διαφορετικούς 
χώρους,πρακτικά βρίσκεται στις εκτυπώσεις. Συγκεκριμένα, οι Yard, Stairs, Corridor καλούν τον constructor, την 
enter και την exit μέσα στα σώματα των αντίστοιχων δικών τους μεθόδων και εκτυπώνουν το μήνυμα που αρμόζει
στον κάθε χώρο.

Αναφορικά με τους Operating χώρους:

Μια Classroom διαθέτει στοιχεία της τάξης, ένα vector μαθητών και ένα vector δασκάλου, accessors και
μεθόδους enter, exit, place, teacher_out, operate, print. Η enter προσθέτει τον μαθητή στο vector και θέτει
την ένδειξη του μαθητή εντός της τάξης. Η exit αντίστοιχα τον αφαιρεί, θέτει την ένδειξη εκτός τάξης και τον
επιστρέφει στο περιβάλλον που προκάλεσε την έξοδο. Κατά παρόμοιο τρόπο με την enter λειτουργεί και η place απλά
για δάσκαλο. Η teacher_out απλώς αφαιρεί τον δάσκαλο σύμφωνα με την εκφώνηση. Η operate καλεί την teach και την 
attend για όσες ώρες δόθηκαν. Η print εκτυπώνει σύμφωνα με την εκφώνηση.

Ένα Floor διαθέτει τον αριθμό του, έναν διάδρομο και 6 αίθουσες τα οποία δημιουργούνται κατά την κλήση του 
constructor του. Η enter καλεί την enter του διαδρόμου στον μαθητή που δόθηκε και έπειτα τον στέλνει στην αίθουσα
που αντιστοιχεί αφού πρώτα τον αφαιρέσει από τον διάδρομο. Η exit διαφέρει από την αντίστοιχη της τάξης καθώς
έχει παράμετρο τον αριθμό της άιθουσας από την οποία επιθυμούμε να εξάγουμε τον μαθητή. Η place φροντίζει να
τοποθετηθεί ο δάσκαλος στην αίθουσα που του αντιστοιχεί. Η teacher_out εξάγει τους δασκάλους από κάθε μία εκ των
αιθουσών του ορόφου καλώντας την teacher_out. H operate του Floor καλεί την operate για κάθε τάξη του ορόφου 
για τις δοθείσες ώρες και η print εκτυπώνει σύμφωνα με τα ζητούμενα.

Ένα School διαθέτει yard, stairs και 3 floor καθώς και το συνολικό αριθμό των μαθητών του σχολείου. Οι αυλή, σκάλες
και όροφοι δημιουργούνται στον constructor. H enter εισάγει τον μαθητή στην αυλή, έπειτα στις σκάλες αφού προηγηθεί
η έξοδος της αυλής και τέλος στον κατάλληλο όροφο αφού κάνει τους ελέγχους και ολοκληρώσει και την έξοδο από τις σκάλες.
Η empty για όσο υπάρχουν μαθητές στο κτήριο καλεί την exit του floor για τον κατάλληλο μαθητή και τον εισάγει στις σκάλες
έπειτα τον εισάγει στην αυλή αφού τον εξάγει από τις σκάλες και τέλος τον βγάζει από την αυλή. Αφού βγούν οι μαθητές,
καλεί για κάθε όροφο και την teachers_out ώστε να εκκενωθεί το κτήριο. Η place τοποθετεί τον δάσκαλο στον κατάλληλο όροφο.
Η operate καλεί την αντίστοιχη operate του κάθε ορόφου. Η print εκτυπώνει σύμφωνα με την εκφώνηση.

Για τη main:
Κάνω import io.File, io.FileNotFoundException για τη διαχείρηση αρχείων, Scanner για είσοδο του αρχείου, Collections για να
ανακατέψω τα vectors με μαθητές ή δασκάλους. Υπό την υπόθεση ότι όλες οι σταθερές είναι ακέραιοι, μέσω της parseInt() τις διαβάζω
από τη γραμμή εντολών. Δημιουργώ ένα πίνακα από 600 strings στα οποία θα αποθηκευτούν τα ονόματα που θα διαβαστούν από
το αρχείο. Δημιουργώ ένα αντικείμενο file ώστε να περάσω το αρχείο names και καλώ βοηθητικές μεταβλητές. Δημιουργώ ένα σχολείο.
Διαβάζω το αρχείο γραμμή προς γραμμή και αναθέτω τα ονόματα στον πίνακα. Φτιάχνω ένα vector για δασκάλους, δημιουργώ δασκάλους και
τους προσθέτω σε αυτό αρχικοποιώντας τους. Κατ' αντίστοιχο τρόπο δημιουργώ και μαθητές. Στη συνέχεια μέσω της μεθόδου shuffle 
ανακατεύω τα vectors ώστε η είσοδος να γίνει με τυχαία σειρά. Οσο υπάρχουν μαθητές και δάσκαλοι αντίστοιχα, τους εισάγω στο σχολείο.
Το σχολείο λειτουργεί για Ν ώρες, εκτυπώνω το σχολείο μόλις τελειώσει η λειτουργεία και έπειτα το κτήριο εκκενώνεται.